# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: React CI/CD with Docker to VPS

on:
  push:
    branches: [master]

jobs:
  setup:
    name: Install dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

  lint:
    name: Lint code
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Run linter
        run: yarn lint

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

  build:
    name: Build project
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Build app
        run: yarn build

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

#      - name: Deploy via SSH
#        uses: appleboy/ssh-action@v0.1.6
#        with:
#          host: ${{ secrets.VPS_HOST }}
#          username: ${{ secrets.VPS_USER }}
#          key: ${{ secrets.VPS_SSH_KEY }}
#          script: |
#            cd ${{ secrets.VPS_TARGET_DIR }}
#            git pull origin master
#            docker compose -f docker-compose.yml down
#            docker compose -f docker-compose.yml up --build -d

